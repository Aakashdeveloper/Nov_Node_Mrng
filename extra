https://code.visualstudio.com/
https://nodejs.org/en/
https://github.com/

NPM
Basic JavaScript
Basic NodeJS(in built)(Os,file,http)
NodeJS(full Stack App) (Node-EJS-Mongo-Express)
Third Party Api (Weather Api)
Node-Es6(.babel)
Redis  > 6379
Github
Oauth(with github)
>>Production<<
Pm2
Heroku
Login/Logout(JWT)
MongoDb Basic >27017
Api with NodeJS(Rest)
Testing
DashBoard(Crud)
OO_NodeJs
Docker
Nginx
//////////////
GraphQl API
NodeJs with postgres

Email With Node
chatapp


///////
why NodeJs
> single thread, nonblocking, async  I/O 
> directly convert into machine lang
> v8 engine

>open source

//////NPM///

> local dependency
> global dependency
> dev dependency

////package.json//////
> entry point
> script
> meta data
> package (local/dev)

JSON> JavaScript Object Notation
Way to respresent data
[
    {
        name:'a',
        class:1
    },
     {
        name:'b',
        class:2,
        rollno:1
    }
]


//////////////////////
Step to create package.json
//////////
**Node Js must be installed in system
> navigate to the folder using cmd
> npm init 
> Answer all question
> type 'yes'


//////////////////////
Step to install package
/////////////////////
local package
global package
dev dependency

>>>>>Local Packages<<<
Local to the folder 
> navigate to the folder using cmd
> npm i package name

>>>>>dev dependency<<<
> navigate to the folder using cmd
> npm i packagename --save-dev
> npm i mocha --save-dev

>>>>>Global dependency<<<
it is local to the system
# help to setup and run the App

#window
> open cmd as admin
> npm i -g nodemon

#mac/linux
> open terminal
> sudo npm i -g nodemon

function add(a,b){
    return a+b
}

add(1,2)

////////
> https://www.mongodb.com/try/download/community
> download and install MongoDb
> Go inside C drive
> create folder data/db


Open one cmd
> go inside mongodb folder(bin)
> C/programfile/mongodb/server/4.4/bin
> mongod 
(this will start mongodb server 27017)

Open second cmd
> go inside mongodb folder(bin)
> C/programfile/mongodb/server/4.4/bin
> mongo 
(this is mongodb console)

///////////////////
Nosql  Vs SQL
/////////////////
Sno | Hindi | English | Comp
1   | 80    |         |
2   |       | 80      |
3   | 80    |         | 80

[
    {
        sno:1,
        hindi:80
    },
     {
        sno:2,
        English:80
    }
    ,
     {
        sno:3,
        Hindi:80,
        Comp:80
     }
]
Schema less 


Sql          NoSql
Database     Database
tables       collections
row          document 

//////to see all databases
> show dbs
> use nareshit
> show collections
> db.collectionname.find()

////to create
> use databasename
> db.mycol.insert({name:'John'})

 npm i express ejs request

 babel 

 npm i @babel/core @babel/preset-env @babel/register

 >>>>>>>>>><<<<<<<<<<<
 redis-server
 redis-cli

 npm i axios express redis

 127.0.0.1:6379> KEYS *
1) "city"
2) "token"

127.0.0.1:6379> get token
"8768767"

127.0.0.1:6379> set token1 mytoken
OK

127.0.0.1:6379> KEYS *
1) "token1"
2) "city"
3) "token"

127.0.0.1:6379> get token1
"mytoken"


//////GITHUB//////
>Copy whole code
git clone https://github.com/Aakashdeveloper/javascript_test

> push the code
# git add .
# git commit -m "Added new logo"
# git push

branch

> git checkout -b branchname
git add .
git commit -m "Added new logo"
git push -u branchname

>>>>>New git Repo<<<<<<
git init
git add .
git commit -m "first commit"
git remote add origin https://github.com/Aakashdeveloper/node_test.git
git push -u origin master

git add .
git commit -m "first commit"
git push


>>>>To Save Change<<<<
git stash
git stash apply

////////////////////
> GET  https://github.com/login/oauth/authorize?client_id=353454
  return(
      code:''
  )

> POSt >https://github.com/login/oauth/access_token 
send{
    client_id:'',
    client_secert:'',
    code:''
}
return{
    access_token
}

>GET >https://api.github.com/user
send{
    access_token
}
return{
    user info
}

npm i express ejs cors request superagent

95f859cdc8dbaeba978c
4e0f207fffd3cc14f4b956fc29bbc7c60feda4e9


npm i -g Pm2

pm2 start start.js
pm2 status
pm2 stop start
pm2 start api.js -i 4


npm i bcryptjs body-parser cors express jsonwebtoken mongoose

/////////////////////////


npm i body-parser ejs express mongodb chai chai-http mocha cors

npm i express mongodb @babel/core @babel/preset-env @babel/register

docker build . -t name
docker run -p 7899:9000 name